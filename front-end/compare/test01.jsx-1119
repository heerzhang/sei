
/** @jsx jsx */
import { jsx, css } from "@emotion/core";
import * as React from "react";
import Axios from "axios";
import InfiniteScroll from "react-intersection-observing-infinity-scroll";

export defaultã€€class Example extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      page: 1,
      commits: [],
      isLoading: false
    };
  }
  componentDidMount() {
    const { page } = this.state;
    this.fetchCommits();
  }
  render() {
    const { commits, isLoading } = this.state;
    const commitList = commits.map(commit => {
      return (
        <div
          key={commit.sha}
          style={{
            width: 700,
            margin: "0 auto 30px auto",
            border: "1px solid #efefef",
            borderRadius: "5px",
            padding: 8
          }}
        >
          <img
            style={{
              display: "inline-block",
              verticalAlign: "top",
              margin: "0 8px 16px 0",
              borderRadius: "5px"
            }}
            width={50}
            height={50}
            src={commit.author.avatar_url}
          />
          <strong style={{ display: "inline-block", verticalAlign: "top" }}>
            {commit.commit.author.name}
          </strong>
          <div>{commit.commit.message}</div>
        </div>
      );
    });
    return (
      <div   css={{
        overflowY: "scroll",
        height: "477px",
      }}>
          {commitList}
      </div>
    );
  }
  fetchCommits = async (page) => {
    console.log("============FIRED");
    this.setState(prevState => ({ ...prevState, isLoading: true }));
    const res = await Axios(
      "https://api.github.com/repos/pluto-net/scinapse-web-client/commits",
      {
        headers: {
          Accept: "application/vnd.github.v3+json"
        },
        params: {
          type: "all",
          page: page || this.state.page
        }
      }
    );
    this.setState(prevState => ({
      ...prevState,
      commits: [...prevState.commits, ...res.data],
      isLoading: false,
      page: prevState.page + 1
    }));
  };
}
